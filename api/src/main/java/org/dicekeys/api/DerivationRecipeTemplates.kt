package org.dicekeys.api

//
//  DerivationRecipeTemplates
//
//  Auto-generated by recipe.ts in the DiceKeys specification TypeScript project.
//  Tue, 02 Feb 2021 22:48:52 GMT
//
//  These templates are hard coded because the recipe (also known as
//  recipeJson) is an input to the hash function used to derive
//  passwords and other secrets, and so even a single-character change
//  to the recipe will change the entire contents of the password/secret.
//
//  Thus, we generate these strings from TypeScript, generate code that contains
//  them, and only ever modify them with deterministic functions that insert
//  new fields before the closing "}" with no spaces.
//  (e.g., inserting ","lengthInBytes":64".)
//

import org.dicekeys.crypto.seeded.DerivationOptions

val derivationRecipeTemplates: Array<DerivationRecipe> = arrayOf(
	DerivationRecipe(DerivationOptions.Type.Password, "1Password", """{"allow":[{"host":"*.1password.com"}]}"""),
	DerivationRecipe(DerivationOptions.Type.Password, "Apple", """{"allow":[{"host":"*.apple.com"},{"host":"*.icloud.com"}],"lengthInChars":64}"""),
	DerivationRecipe(DerivationOptions.Type.Password, "Authy", """{"allow":[{"host":"*.authy.com"}]}"""),
	DerivationRecipe(DerivationOptions.Type.Password, "Bitwarden", """{"allow":[{"host":"*.bitwarden.com"}]}"""),
	DerivationRecipe(DerivationOptions.Type.Password, "Facebook", """{"allow":[{"host":"*.facebook.com"}]}"""),
	DerivationRecipe(DerivationOptions.Type.Password, "Google", """{"allow":[{"host":"*.google.com"}]}"""),
	DerivationRecipe(DerivationOptions.Type.Password, "Keeper", """{"allow":[{"host":"*.keepersecurity.com"},{"host":"*.keepersecurity.eu"}]}"""),
	DerivationRecipe(DerivationOptions.Type.Password, "LastPass", """{"allow":[{"host":"*.lastpass.com"}]}"""),
	DerivationRecipe(DerivationOptions.Type.Password, "Microsoft", """{"allow":[{"host":"*.microsoft.com"},{"host":"*.live.com"}]}""")  
)


val seedSecurityKeyRecipeTemplate = DerivationRecipe(DerivationOptions.Type.Secret, "Seed Security Key", """{"purpose":"seedSecurityKey"}""")
